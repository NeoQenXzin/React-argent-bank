swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
tags:
  - name: User Module
    description: Connect to Api for User Data
    externalDocs:
      description: Find more
      url: http:/google.fr
  - name: User Transactions
    description: All transactions for User
    externalDocs:
      description: Find more
      url: http:/google.fr
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/transactions/:
    get:
      tags:
        - User Transactions
      summary: Get last month transactions of user
      description: Returns all transactions
      parameters:
        - name: Authorization
          type: string
          in: header
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: "#/definitions/GetTransactions"
        "401":
          description: Unauthorized
        "404":
          description: User Account not found
      security:
        - Bearer: []
    post:
      tags:
        - User Transactions
      summary: Add a transaction with form data
      description: ""
      operationId: addTransactionWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Attach Bearer JWT token
          required: true
        - name: body
          in: body
          description: Transaction object that needs to be added
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      responses:
        "201":
          description: Success! Transaction added.
          schema:
            $ref: "#/definitions/Transaction"
        "405":
          description: Invalid input
      security:
        - Bearer: []

  /user/transactions/{transactionId}:
    get:
      tags:
        - User Transactions
      summary: Find a transaction by ID
      description: Returns a single transaction
      operationId: getTransactionById
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Attach Bearer JWT token
          required: true
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid ID supplied
        "404":
          description: Transaction not found
      security:
        - Bearer: []
    put:
      tags:
        - User Transactions
      summary: Updates a transaction  with form data
      description: ""
      operationId: updateTransactionWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: path
          description: ID of transaction that needs to be updated
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          type: string
          description: Attach Bearer JWT token
          required: true
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid ID supplied
        "404":
          description: Transaction not found
        "405":
          description: Invalid input
      security:
        - Bearer: []
    delete:
      tags:
        - User Transactions
      summary: Deletes a transaction
      description: ""
      operationId: deleteTransaction
      produces:
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: transactionId
          in: path
          description: Transaction id to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: Transaction Delete succefully
        "400":
          description: Invalid ID supplied
        "404":
          description: Transaction not found
      security:
        - Bearer: []

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  GetTransactions:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
          description: creation date
        month:
          type: string
          format: yyyy-mm
          description: Month of transaction
        title:
          type: string
          description: ref transaction
        amount:
          type: string
          description: amount of the transaction
        amountDescription:
          type: string
          description: state of transaction

  Transaction:
    type: object
    properties:
      id:
        type: integer
        format: int64
      createdAt:
        type: string
        format: date-time
        description: creation date
      month:
        type: string
        format: yyyy-mm
        description: Month of transaction
      title:
        type: string
        description: ref transaction
      amount:
        type: string
        description: amount of the transaction
      amountDescription:
        type: string
        description: state of transaction
